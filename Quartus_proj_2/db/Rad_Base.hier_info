|Base_SW_Rad
CLK => sw_count_decoder:DEecoder.CLK
CLK => sw_count_coder:Coder.CLK
RES => sw_count_decoder:DEecoder.RES
RES => sw_count_coder:Coder.RES
ERROR_BUFFER[0] => sw_count_coder:Coder.ERROR_BUFFER[0]
ERROR_BUFFER[1] => sw_count_coder:Coder.ERROR_BUFFER[1]
ERROR_COUNTER[0] => sw_count_coder:Coder.ERROR_COUNTER[0]
ERROR_COUNTER[1] => sw_count_coder:Coder.ERROR_COUNTER[1]
ERROR_WORD[0] => sw_count_coder:Coder.ERROR_WORD[0]
ERROR_WORD[1] => sw_count_coder:Coder.ERROR_WORD[1]
OUT_COUNT[0] <= sw_count_decoder:DEecoder.OUT_COUNT[0]
OUT_COUNT[1] <= sw_count_decoder:DEecoder.OUT_COUNT[1]
OUT_COUNT[2] <= sw_count_decoder:DEecoder.OUT_COUNT[2]
TEST_CODER[0] <= sw_count_coder:Coder.TEST[0]
TEST_CODER[1] <= sw_count_coder:Coder.TEST[1]
TEST_CODER[2] <= sw_count_coder:Coder.TEST[2]
TEST_CODER[3] <= sw_count_coder:Coder.TEST[3]
TEST_CODER[4] <= sw_count_coder:Coder.TEST[4]
TEST_CODER[5] <= sw_count_coder:Coder.TEST[5]
TEST_CODER[6] <= sw_count_coder:Coder.TEST[6]
TEST_CODER[7] <= sw_count_coder:Coder.TEST[7]
TEST_CODER[8] <= sw_count_coder:Coder.TEST[8]
TEST_CODER[9] <= sw_count_coder:Coder.TEST[9]
TEST_CODER[10] <= sw_count_coder:Coder.TEST[10]
TEST_CODER[11] <= sw_count_coder:Coder.TEST[11]
TEST_CODER[12] <= sw_count_coder:Coder.TEST[12]
TEST_CODER[13] <= sw_count_coder:Coder.TEST[13]
TEST_CODER[14] <= sw_count_coder:Coder.TEST[14]
TEST_CODER[15] <= sw_count_coder:Coder.TEST[15]
TEST_DECODER[0] <= sw_count_decoder:DEecoder.TEST[0]
TEST_DECODER[1] <= sw_count_decoder:DEecoder.TEST[1]
TEST_DECODER[2] <= sw_count_decoder:DEecoder.TEST[2]
TEST_DECODER[3] <= sw_count_decoder:DEecoder.TEST[3]
TEST_DECODER[4] <= sw_count_decoder:DEecoder.TEST[4]
TEST_DECODER[5] <= sw_count_decoder:DEecoder.TEST[5]
TEST_DECODER[6] <= sw_count_decoder:DEecoder.TEST[6]
TEST_DECODER[7] <= sw_count_decoder:DEecoder.TEST[7]
TEST_DECODER[8] <= sw_count_decoder:DEecoder.TEST[8]
TEST_DECODER[9] <= sw_count_decoder:DEecoder.TEST[9]
TEST_DECODER[10] <= sw_count_decoder:DEecoder.TEST[10]
TEST_DECODER[11] <= sw_count_decoder:DEecoder.TEST[11]
TEST_DECODER[12] <= sw_count_decoder:DEecoder.TEST[12]
TEST_DECODER[13] <= sw_count_decoder:DEecoder.TEST[13]
TEST_DECODER[14] <= sw_count_decoder:DEecoder.TEST[14]
TEST_DECODER[15] <= sw_count_decoder:DEecoder.TEST[15]


|Base_SW_Rad|SW_Count_Coder:Coder
CLK => div_f2m:DIV.CLK
RES => form_buffer:Form_buffer.RES
RES => step_count:COUNT.RES
RES => div_f2m:DIV.RES
ERROR_BUFFER[0] => form_buffer:Form_buffer.ERROR_BUFFER[0]
ERROR_BUFFER[1] => form_buffer:Form_buffer.ERROR_BUFFER[1]
ERROR_COUNTER[0] => step_count:COUNT.ERROR_COUNT[0]
ERROR_COUNTER[1] => step_count:COUNT.ERROR_COUNT[1]
ERROR_WORD[0] => form_word:Form_word.ERROR_WORD[0]
ERROR_WORD[1] => form_word:Form_word.ERROR_WORD[1]
OUT_WORD <= form_word:Form_word.OUT_WORD
TEST[0] <= div_f2m:DIV.F2M
TEST[1] <= step_count:COUNT.OUT_STEP[0]
TEST[2] <= step_count:COUNT.OUT_STEP[1]
TEST[3] <= step_count:COUNT.OUT_STEP[2]
TEST[4] <= form_buffer:Form_buffer.OUT_BUFFER_1[0]
TEST[5] <= form_buffer:Form_buffer.OUT_BUFFER_1[1]
TEST[6] <= form_buffer:Form_buffer.OUT_BUFFER_1[2]
TEST[7] <= form_buffer:Form_buffer.OUT_BUFFER_2[0]
TEST[8] <= form_buffer:Form_buffer.OUT_BUFFER_2[1]
TEST[9] <= form_buffer:Form_buffer.OUT_BUFFER_2[2]
TEST[10] <= div_f2m:DIV.NUMBER_BUFFER
TEST[11] <= form_word:Form_word.OUT_WORD
TEST[12] <= <GND>
TEST[13] <= <GND>
TEST[14] <= <GND>
TEST[15] <= <GND>


|Base_SW_Rad|SW_Count_Coder:Coder|DIV_F2M:DIV
CLK => counter[2].CLK
CLK => counter[1].CLK
CLK => counter[0].CLK
CLK => number.CLK
CLK => F2M~reg0.CLK
RES => counter[2].ACLR
RES => counter[1].ACLR
RES => counter[0].ACLR
RES => number.ACLR
RES => F2M~reg0.ACLR
STATUS[0] <= counter[0].DB_MAX_OUTPUT_PORT_TYPE
STATUS[1] <= counter[1].DB_MAX_OUTPUT_PORT_TYPE
STATUS[2] <= counter[2].DB_MAX_OUTPUT_PORT_TYPE
NUMBER_BUFFER <= number.DB_MAX_OUTPUT_PORT_TYPE
F2M <= F2M~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Base_SW_Rad|SW_Count_Coder:Coder|Step_count:COUNT
CLK => counter[2].CLK
CLK => counter[1].CLK
CLK => counter[0].CLK
RES => counter[2].PRESET
RES => counter[1].PRESET
RES => counter[0].ACLR
ERROR_COUNT[0] => Equal1.IN3
ERROR_COUNT[0] => Equal0.IN3
ERROR_COUNT[1] => Equal1.IN2
ERROR_COUNT[1] => Equal0.IN2
OUT_STEP[0] <= counter[0].DB_MAX_OUTPUT_PORT_TYPE
OUT_STEP[1] <= counter[1].DB_MAX_OUTPUT_PORT_TYPE
OUT_STEP[2] <= counter[2].DB_MAX_OUTPUT_PORT_TYPE


|Base_SW_Rad|SW_Count_Coder:Coder|Form_buffer:Form_buffer
CLK => buffer_temp_1[2].CLK
CLK => buffer_temp_1[1].CLK
CLK => buffer_temp_1[0].CLK
CLK => buffer_temp_2[2].CLK
CLK => buffer_temp_2[1].CLK
CLK => buffer_temp_2[0].CLK
RES => buffer_temp_1[2].PRESET
RES => buffer_temp_1[1].PRESET
RES => buffer_temp_1[0].PRESET
RES => buffer_temp_2[2].PRESET
RES => buffer_temp_2[1].PRESET
RES => buffer_temp_2[0].PRESET
ERROR_BUFFER[0] => Equal2.IN3
ERROR_BUFFER[0] => Equal1.IN3
ERROR_BUFFER[0] => Equal0.IN3
ERROR_BUFFER[1] => Equal2.IN2
ERROR_BUFFER[1] => Equal1.IN2
ERROR_BUFFER[1] => Equal0.IN2
IN_STEP[0] => Equal4.IN3
IN_STEP[0] => Equal3.IN3
IN_STEP[1] => Equal4.IN2
IN_STEP[1] => Equal3.IN2
IN_STEP[2] => buffer_temp_2~1.DATAB
IN_STEP[2] => buffer_temp_2~0.DATAA
IN_STEP[2] => buffer_temp_1~9.DATAB
IN_STEP[2] => buffer_temp_1~6.DATAB
IN_STEP[2] => buffer_temp_1~5.DATAA
IN_STEP[2] => buffer_temp_1~0.DATAB
IN_STEP[2] => buffer_temp_1~1.DATAB
IN_STEP[2] => buffer_temp_1~3.DATAA
IN_STEP[2] => buffer_temp_2[0].DATAIN
OUT_BUFFER_1[0] <= buffer_temp_1[0].DB_MAX_OUTPUT_PORT_TYPE
OUT_BUFFER_1[1] <= buffer_temp_1[1].DB_MAX_OUTPUT_PORT_TYPE
OUT_BUFFER_1[2] <= buffer_temp_1[2].DB_MAX_OUTPUT_PORT_TYPE
OUT_BUFFER_2[0] <= buffer_temp_2[0].DB_MAX_OUTPUT_PORT_TYPE
OUT_BUFFER_2[1] <= buffer_temp_2[1].DB_MAX_OUTPUT_PORT_TYPE
OUT_BUFFER_2[2] <= buffer_temp_2[2].DB_MAX_OUTPUT_PORT_TYPE


|Base_SW_Rad|SW_Count_Coder:Coder|Form_word:Form_word
IN_BUFFER_1[0] => inner_buffer_1[0].DATAA
IN_BUFFER_1[0] => inner_buffer_1[0].DATAB
IN_BUFFER_1[1] => inner_buffer_1[1].DATAB
IN_BUFFER_1[1] => inner_buffer_1~2.DATAA
IN_BUFFER_1[1] => inner_buffer_1~2.DATAB
IN_BUFFER_1[2] => inner_buffer_1[2].DATAB
IN_BUFFER_1[2] => inner_buffer_1~1.DATAB
IN_BUFFER_1[2] => inner_buffer_1~0.DATAA
IN_BUFFER_1[2] => inner_buffer_1~0.DATAB
IN_BUFFER_2[0] => inner_buffer_2[0].DATAA
IN_BUFFER_2[0] => inner_buffer_2[0].DATAB
IN_BUFFER_2[1] => inner_buffer_2[1].DATAB
IN_BUFFER_2[1] => inner_buffer_2~2.DATAA
IN_BUFFER_2[1] => inner_buffer_2~2.DATAB
IN_BUFFER_2[2] => inner_buffer_2[2].DATAB
IN_BUFFER_2[2] => inner_buffer_2~1.DATAB
IN_BUFFER_2[2] => inner_buffer_2~0.DATAA
IN_BUFFER_2[2] => inner_buffer_2~0.DATAB
NUMBER_BUFFER => OUT_WORD~2.OUTPUTSELECT
ERROR_WORD[0] => Equal2.IN3
ERROR_WORD[0] => Equal1.IN3
ERROR_WORD[0] => Equal0.IN3
ERROR_WORD[1] => Equal2.IN2
ERROR_WORD[1] => Equal1.IN2
ERROR_WORD[1] => Equal0.IN2
STATUS[0] => Equal5.IN5
STATUS[0] => Equal4.IN5
STATUS[0] => Equal3.IN5
STATUS[1] => Equal5.IN4
STATUS[1] => Equal4.IN4
STATUS[1] => Equal3.IN4
STATUS[2] => Equal5.IN3
STATUS[2] => Equal4.IN3
STATUS[2] => Equal3.IN3
OUT_WORD <= OUT_WORD$latch.DB_MAX_OUTPUT_PORT_TYPE


|Base_SW_Rad|SW_Count_Decoder:DEecoder
CLK => decoder_reader:READ_WORD.CLK
CLK => div_f2m:DIV.CLK
RES => decoder_reader:READ_WORD.RES
RES => div_f2m:DIV.RES
IN_WORD => decoder_reader:READ_WORD.IN_WORD
OUT_COUNT[0] <= decoder_reader:READ_WORD.OUT_WORD[0]
OUT_COUNT[1] <= decoder_reader:READ_WORD.OUT_WORD[1]
OUT_COUNT[2] <= decoder_reader:READ_WORD.OUT_WORD[2]
TEST[0] <= div_f2m:DIV.F2M
TEST[1] <= decoder_reader:READ_WORD.SYNC
TEST[2] <= <GND>
TEST[3] <= <GND>
TEST[4] <= <GND>
TEST[5] <= <GND>
TEST[6] <= <GND>
TEST[7] <= <GND>
TEST[8] <= <GND>
TEST[9] <= <GND>
TEST[10] <= <GND>
TEST[11] <= <GND>
TEST[12] <= <GND>
TEST[13] <= <GND>
TEST[14] <= <GND>
TEST[15] <= <GND>


|Base_SW_Rad|SW_Count_Decoder:DEecoder|DIV_F2M:DIV
CLK => counter[2].CLK
CLK => counter[1].CLK
CLK => counter[0].CLK
CLK => number.CLK
CLK => F2M~reg0.CLK
RES => counter[2].ACLR
RES => counter[1].ACLR
RES => counter[0].ACLR
RES => number.ACLR
RES => F2M~reg0.ACLR
STATUS[0] <= counter[0].DB_MAX_OUTPUT_PORT_TYPE
STATUS[1] <= counter[1].DB_MAX_OUTPUT_PORT_TYPE
STATUS[2] <= counter[2].DB_MAX_OUTPUT_PORT_TYPE
NUMBER_BUFFER <= number.DB_MAX_OUTPUT_PORT_TYPE
F2M <= F2M~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Base_SW_Rad|SW_Count_Decoder:DEecoder|Decoder_Reader:READ_WORD
RES => sync_inner.ACLR
RES => count[2].ACLR
RES => count[1].ACLR
RES => count[0].ACLR
RES => count_status[2].ACLR
RES => count_status[1].ACLR
RES => count_status[0].ACLR
RES => OUT_WORD[2]~reg0.ACLR
RES => OUT_WORD[1]~reg0.ACLR
RES => OUT_WORD[0]~reg0.ACLR
RES => SYNC~reg0.ACLR
RES => word_inner[0].ENA
RES => word_inner[2].ENA
RES => word_inner[1].ENA
CLK => sync_inner.CLK
CLK => count[2].CLK
CLK => count[1].CLK
CLK => count[0].CLK
CLK => count_status[2].CLK
CLK => count_status[1].CLK
CLK => count_status[0].CLK
CLK => OUT_WORD[2]~reg0.CLK
CLK => OUT_WORD[1]~reg0.CLK
CLK => OUT_WORD[0]~reg0.CLK
CLK => SYNC~reg0.CLK
CLK => word_inner[2].CLK
CLK => word_inner[1].CLK
CLK => word_inner[0].CLK
IN_WORD => word_inner~5.DATAB
IN_WORD => word_inner~2.DATAB
IN_WORD => word_inner~0.DATAB
IN_WORD => count~5.OUTPUTSELECT
IN_WORD => count~4.OUTPUTSELECT
IN_WORD => count~3.OUTPUTSELECT
IN_WORD => sync_inner.ENA
SYNC <= SYNC~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT_WORD[0] <= OUT_WORD[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT_WORD[1] <= OUT_WORD[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT_WORD[2] <= OUT_WORD[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


